export enum CORE_SIGNAL {
  'heartbeat' = 'heartbeat',
  'initialize' = 'initialize',
  'join' = 'join',
  'attendee-join' = 'attendee-join',
  'score' = 'score',
  'rejoin' = 'rejoin',
  'leave' = 'leave',
  'expel' = 'expel',
  'unexpel' = 'unexpel',
  'response' = 'response',
  'admin' = 'admin',
  'active-speaker' = 'active-speaker',
  'webrtc-transport:produce' = 'webrtc-transport:produce',
  'webrtc-transport:consume' = 'webrtc-transport:consume',
  'transport:connect' = 'transport:connect',
  'transport:produce' = 'transport:produce',
  'start:post' = 'start:post',
  'peer:configure' = 'peer:configure',
  'consumer:new' = 'consumer:new',
  'consumer:disconnect' = 'consumer:disconnect',
  'action:block' = 'action:block',
  'action:failed' = 'action:failed',
  'device:replace' = 'device:replace',
  'camera:pause' = 'camera:pause',
  'camera:pause-lock' = 'camera:pause-lock',
  'camera:unlock' = 'camera:unlock',
  'camera:resume' = 'camera:resume',
  'mic:mute' = 'mic:mute',
  'mic:mute-lock' = 'mic:mute-lock',
  'mic:unlock' = 'mic:unlock',
  'mic:unmute' = 'mic:unmute',
  'mic-is-mute' = 'mic-is-mute',
  'all:mute' = 'all:mute',
  'all:pause' = 'all:pause',
  'hold' = 'hold',
  'unhold' = 'unhold',
  'recording:start' = 'recording:start',
  'recording:stop' = 'recording:stop',
  'signaling:fail' = 'signaling:fail',
  'signaling:close' = 'signaling:close',
  'signaling:open' = 'signaling:open',
  'screen:share' = 'screen:share',
  'screen:stop' = 'screen:stop',
  'screen:terminate-lock' = 'screen:terminate-lock',
  'screen:terminate' = 'screen:terminate',
  'screen:unlock' = 'screen:unlock',
  'connection:lost' = 'connection:lost',
  'connection:reconnect' = 'connection:reconnect',
  'connection:migration' = 'connection:migration',
  'bot:notify' = 'bot:notify',
  'room:terminate' = 'room:terminate',
  'room:online' = 'room:online',
  'room:stats' = 'room:stats',
  'room:prepare' = 'room:prepare',
  'room:data' = 'room:data',
  'room:update-participants' = 'room:update-participants',
  'room:force-close' = 'room:force-close',
  'room:migrate-check' = 'room:migrate-check',
  'room:migrate' = 'room:migrate',
  'peer:update' = 'peer:update',
  'encryption:toggle' = 'encryption:toggle',
  'dump:request' = 'dump:request',
  'dump:ask-data' = 'dump:ask-data',
  'dump:data' = 'dump:data',
  'cache:flush' = 'cache:flush',
}

export enum CORE_V2_SIGNAL_WS {
  'join' = 'join',
  'peer:hold' = 'peer:hold',
  'peer:unHold' = 'peer:unHold',
  'transport:create' = 'transport:create',
  'transport:connect' = 'transport:connect',
  'transport:restart' = 'transport:restart',
  'producer:produce' = 'producer:produce',
  'producer:all' = 'producer:all',
  'producer:pause' = 'producer:pause',
  'producer:resume' = 'producer:resume',
  'producer:askResume' = 'producer:askResume',
  'producer:close' = 'producer:close',
  'consumer:consume' = 'consumer:consume',
  'consumer:resume' = 'consumer:resume',
  'media:lock' = 'media:lock',
  'media:unlock' = 'media:unlock',
  'media:lockAllMedia' = 'media:lockAllMedia',
  'media:unlockAllMedia' = 'media:unlockAllMedia',
  'media:pauseAll' = 'media:pauseAll',
  'media:closeAll' = 'media:closeAll',
  'meeting:switchBranch' = 'meeting:switchBranch',
  'media:calibrate' = 'media:calibrate',
  'media:calibrateAll' = 'media:calibrateAll',
  'recording:start' = 'recording:start',
  'recording:stop' = 'recording:stop',
  'transcription:start' = 'transcription:start',
  'transcription:stop' = 'transcription:stop',
  'encryption:start' = 'encryption:start',
  'encryption:stop' = 'encryption:stop',
  'peer:left' = 'peer:left',
}

export enum CORE_V2_SIGNAL_MESSAGING {
  'meeting:close' = 'meeting:close',
  'meeting:update' = 'meeting:update',
  'peer:kick' = 'peer:kick',
  'peer:update' = 'peer:update',
  'peer:switch' = 'peer:switch',
  'bor:close' = 'bor:close',
  'meeting:migrate' = 'meeting:migrate',
  'meeting:free' = 'meeting:free',
}

export enum CORE_V2_SIGNAL_NOTIFICATIONS {
  'peer:new' = 'peer:new',
  'transport:init' = 'transport:init',
  'peer:dis' = 'peer:dis',
  'peer:kick' = 'peer:kick',
  'peer:update' = 'peer:update',
  'peer:switch' = 'peer:switch',
  'peer:score' = 'peer:score',
  'producer:new' = 'producer:new',
  'producer:close' = 'producer:close',
  'producer:pause' = 'producer:pause',
  'producer:resume' = 'producer:resume',
  'producer:confirmResume' = 'producer:confirmResume',
  'hold:toggle' = 'hold:toggle',
  'meeting:closed' = 'meeting:closed',
  'branch:closed' = 'branch:closed',
  'score:consumer' = 'score:consumer',
  'score:producer' = 'score:producer',
  'recording:update' = 'recording:update',
  'recording:notify-preview' = 'recording:notify-preview',
  'transcription:update' = 'transcription:update',
  'transcription:message' = 'transcription:message',
  'encryption:update' = 'encryption:update',
}

export enum BACKEND_SIGNAL_WS {
  'room:message' = 'room:message',
  'room:raise-hand' = 'room:raise-hand',
}
